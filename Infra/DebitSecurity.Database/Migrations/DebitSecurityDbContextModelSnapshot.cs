// <auto-generated />
using System;
using DebitSecurity.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DebitSecurity.Database.Migrations
{
    [DbContext(typeof(DebitSecurityDbContext))]
    partial class DebitSecurityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DebitSecurity.Domain.Entities.Debit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("Interest")
                        .HasColumnType("int");

                    b.Property<int>("Penalty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId")
                        .IsUnique();

                    b.ToTable("Debits");
                });

            modelBuilder.Entity("DebitSecurity.Domain.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DebitSecurities");
                });

            modelBuilder.Entity("DebitSecurity.Domain.Entities.Installment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DebitID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstallmentNumber")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DebitID");

                    b.ToTable("Installments");
                });

            modelBuilder.Entity("DebitSecurity.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId")
                        .IsUnique();

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("DebitSecurity.Domain.Entities.Debit", b =>
                {
                    b.HasOne("DebitSecurity.Domain.Entities.Document", "Document")
                        .WithOne("Debit")
                        .HasForeignKey("DebitSecurity.Domain.Entities.Debit", "DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("DebitSecurity.Domain.Entities.Installment", b =>
                {
                    b.HasOne("DebitSecurity.Domain.Entities.Debit", "Debit")
                        .WithMany("Installments")
                        .HasForeignKey("DebitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debit");
                });

            modelBuilder.Entity("DebitSecurity.Domain.Entities.Person", b =>
                {
                    b.HasOne("DebitSecurity.Domain.Entities.Document", "Document")
                        .WithOne("Customer")
                        .HasForeignKey("DebitSecurity.Domain.Entities.Person", "DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("DebitSecurity.Domain.Entities.Debit", b =>
                {
                    b.Navigation("Installments");
                });

            modelBuilder.Entity("DebitSecurity.Domain.Entities.Document", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Debit");
                });
#pragma warning restore 612, 618
        }
    }
}
